@model LookOn.Dashboards.Page1.Page1MetricDto
@using LookOn.Core.Consts
@using LookOn.Core.Extensions
@using LookOn.Enums
@using Newtonsoft.Json
@using LookOn.Localization
@using LookOn.Web.Pages.Shared
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Alert
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Card
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Grid
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.ProgressBar
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Table
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Tooltip
@inject IHtmlLocalizer<LookOnResource> L

<abp-card>
    <abp-card-body>
        <abp-row class="mb-4">
            <abp-column size-md="_11" size-sm="_10">
                <div class="display-inline-bl font-size-30">@L["Page1.DashboardCustomerDetail.Title"]</div>
            </abp-column>
            <abp-column size-md="_1" size-sm="_2">
                <abp-button class="display-inline-bl float-end shadow-none question-tooltip-margin" abp-tooltip-left="@L["Page1.DashboardCustomerDetail.Hint"].Value">
                    <span class="lo-help-icon"></span>
                </abp-button>
            </abp-column>

            <abp-column size-md="_12" size-xl="_4" size-sm="_6" class="border-right-blue-bell">
                <abp-row class="center-component-chart">
                    <abp-column size="_12">
                        @if (Model.ShortTermSocial is not null && Model.ShortTermSocial.NonLikePageUserCount is not 0 && Model.ShortTermSocial.NonLikePageUserPercent is not 0)
                        {
                            <h2 class="@Model.ShortTermSocial.NonLikePageUserPercent.GetColorClass(@Model.ShortTermSocial.IsNonLikePageUserPositive) display-inline-bl font-size-40 font-weight-700">
                                <i class="@Model.ShortTermSocial.NonLikePageUserPercent.GetArrowClass()"></i> @Model.ShortTermSocial.NonLikePageUserPercent.ToPositivePercent()
                            </h2>
                        }
                        else
                        {
                            @await Html.PartialAsync("Shared/FeatureUpdatingPartial", new FeatureUpdatingModel() { HasContent = false }, ViewData)
                        }
                    </abp-column>
                    <abp-column size="_12">
                        <span class="veek-support-current-font ">@L["Page1.DashboardCustomerDetail.NoLikePage"]</span>
                    </abp-column>
                </abp-row>
            </abp-column>

            <abp-column size-xl="_4" size-md="_12" size-sm="_3" class="border-right-blue-bell">
                <abp-row class="center-component-chart">
                    <abp-column>
                        @if (Model.Social.Demographic is not null && Model.Social.Demographic.HouseOwnerCount is not 0 && Model.Social.Demographic.HouseOwnerPercent is not 0)
                        {
                            <h2 class="display-inline-bl font-size-40 font-weight-700">@Model.Social.Demographic.HouseOwnerCount.FormatNumber()</h2>
                            <b class="@Model.Social.Demographic.HouseOwnerPercent.GetColorClass() display-inline-bl">
                                <i class="@Model.Social.Demographic.HouseOwnerPercent.GetArrowClass()"></i> @Model.Social.Demographic.HouseOwnerPercent.ToPositivePercent()
                            </b>
                        }
                        else
                        {
                            @await Html.PartialAsync("Shared/FeatureUpdatingPartial", new FeatureUpdatingModel() { HasContent = false }, ViewData)
                        }
                    </abp-column>
                    <abp-column size="_12">
                        <span class="veek-support-current-font ">@L["Page1.DashboardCustomerDetail.HadHouse"]</span>
                    </abp-column>
                </abp-row>
            </abp-column>
            
            <abp-column size-xl="_4" size-md="_12" size-sm="_3">
                <abp-row class="center-component-chart">
                    <abp-column>
                        @if (Model.Social.Demographic is not null && Model.Social.Demographic.CarOwnerCount is not 0 && Model.Social.Demographic.CarOwnerPercent is not 0)
                        {
                            <h2 class="display-inline-bl font-size-40 font-weight-700">@Model.Social.Demographic.CarOwnerCount.FormatNumber()</h2>
                            <b class="@Model.Social.Demographic.CarOwnerPercent.GetColorClass() display-inline-bl">
                                <i class="@Model.Social.Demographic.CarOwnerPercent.GetArrowClass()"></i> @Model.Social.Demographic.CarOwnerPercent.ToPositivePercent()
                            </b>
                        }
                        else
                        {
                            @await Html.PartialAsync("Shared/FeatureUpdatingPartial", new FeatureUpdatingModel() { HasContent = false }, ViewData)
                        }

                    </abp-column>
                    <abp-column size="_12">
                        <span class="veek-support-current-font ">@L["Page1.DashboardCustomerDetail.HadCar"]</span>
                    </abp-column>
                </abp-row>
            </abp-column>

        </abp-row>
        <abp-row>
            <abp-column size-md="_12" size-xl="_4" size-sm="_12">
                <div style="font-weight: 600" class="veek-support-current-font">@L["Page1.DashboardCustomerDetail.CustomerAgeTitle"]</div>
                <abp-table border-style="Borderless" striped-rows="false" class="table-top-border-none">
                    <tbody>
                    @if (Model.Social.Demographic?.AgeMetrics != null && Model.Social.Demographic.AgeMetrics.Any(_ => _.AgeSegmentEnum is not AgeSegmentEnum.Age_1_17 and not AgeSegmentEnum.Age_65_Above))
                    {
                        @foreach (var item in Model.Social.Demographic.AgeMetrics.Where(_ => _.AgeSegmentEnum is not AgeSegmentEnum.Age_1_17 and not AgeSegmentEnum.Age_65_Above).OrderBy(_ => _.AgeSegmentEnum))
                        {
                            <tr>
                                <th scope="Row">@L[$"Enum:AgeSegmentEnum:{item.AgeSegmentEnum.ToInt()}"]</th>
                                <td style="min-width: 200px">
                                    <abp-progress-bar value="@item.Percent.ToDouble()" class="LookOn-progress-bar-color-0"/>
                                </td>
                                <td>
                                    @item.Percent.ToPositivePercent()
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3">
                                @await Html.PartialAsync("Shared/FeatureUpdatingPartial", new FeatureUpdatingModel() { HasContent = true }, ViewData)
                            </td>
                        </tr>
                    }
                    </tbody>
                </abp-table>
            </abp-column>
            <abp-column size-xl="_4" size-md="_6" size-sm="_12">
                <div id="maleChart"></div>
            </abp-column>
            <abp-column size-xl="_4" size-md="_6" size-sm="_12">
                <div id="relationshipChart"></div>
            </abp-column>
        </abp-row>
    </abp-card-body>
</abp-card>