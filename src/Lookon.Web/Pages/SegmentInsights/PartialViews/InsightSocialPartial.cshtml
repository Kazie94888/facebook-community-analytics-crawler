@using LookOn.Core.Extensions
@using LookOn.Localization
@using LookOn.Web.Pages.Shared
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Alert
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Card
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Grid
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.ProgressBar
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Table
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Tooltip
@model LookOn.Dashboards.DashboardBase.SocialMetric_CommunityInteractionDto
@inject IHtmlLocalizer<LookOnResource> L

<abp-card>
    <abp-card-body>
        <abp-row>
            <abp-column size-md="_12">
                <div class="display-inline-bl font-size-30">@L["Page3.DashboardSocial.Title"]</div>
                <button type="button" class="btn display-inline-bl float-end shadow-none question-tooltip-margin" data-toggle="tooltip" data-popper-placement="left" title="@L["Page3.DashboardSocial.Hint"].Value">
                    @* <img src="~/images/icons/comment-question.png" alt="comment-question"/> *@
                    <span class="lo-help-icon"></span>
                </button>
            </abp-column>

            <abp-column size-xl="_6" size-md="_12" class="mb-sm-2">
                <div class="veek-support-current-font font-weight-600 margin-bottom-15">@L["Page3.DashboardSocial.TopUsersFollowed"]</div>
                <abp-table border-style="Borderless" striped-rows="false" class="table-top-border-none">
                    <tbody>
                    @if (Model.TopFollowerMetrics.IsNotNullOrEmpty())
                    {
                        @foreach (var item in Model.TopFollowerMetrics)
                        {
                            <tr>
                                <td style="width: 30%">@L[$"Enum:InfluencerTypeByFollower:{item.InfluencerTypeByFollower.ToInt()}"]</td>
                                <td style="width: 50%">
                                    <abp-progress-bar value="@item.Percent.ToDouble()" class="LookOn-progress-bar-color-0"/>
                                </td>
                                <td style="width: 20%">
                                    @item.Percent.ToPositivePercent()
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        @await Html.PartialAsync("Shared/FeatureUpdatingPartial", new FeatureUpdatingModel() { HasContent = true }, ViewData)
                    }
                    </tbody>
                </abp-table>
            </abp-column>
            
            @if (Model.TopLikedPageMetrics.IsNotNullOrEmpty())
            {
                <abp-column size-xl="_6" size-md="_12" class="mb-sm-2">
                    <div class="veek-support-current-font font-weight-600 margin-bottom-15">@L["Page3.DashboardSocial.TopPagesLiked"]</div>
                    <abp-table border-style="Borderless" striped-rows="false" class="table-top-border-none">
                        <tbody>
                        @foreach (var item in Model.TopLikedPageMetrics)
                        {
                            <tr>
                                <td style="width: 30%">@item.Name</td>
                                <td style="width: 50%">
                                    <abp-progress-bar value="@item.Percent.ToDouble()" class="LookOn-progress-bar-color-0"/>
                                </td>
                                <td style="width: 20%">
                                    @item.Percent.ToPositivePercent()
                                </td>
                            </tr>
                        }
                        </tbody>
                    </abp-table>
                </abp-column>
            }
            // else if (Model.TopFollowerMetrics.IsNotNullOrEmpty())
            else
            {
                <abp-column size-xl="_6" size-md="_12" class="mb-sm-2">
                    <div class="veek-support-current-font font-weight-600 margin-bottom-15">@L["Page3.DashboardSocial.TopPagesLiked"]</div>
                    <abp-table border-style="Borderless" striped-rows="false" class="table-top-border-none">
                        <tbody>
                        @await Html.PartialAsync("Shared/FeatureUpdatingPartial", new FeatureUpdatingModel() { HasContent = true }, ViewData)
                        </tbody>
                    </abp-table>
                </abp-column>
            }
            
            @if (Model.TopCheckinLocations.IsNotNullOrEmpty())
            {
                <abp-column size-xl="_6" size-md="_12" class="mb-sm-2">
                    <div class="veek-support-current-font font-weight-600 margin-bottom-15">@L["Page3.DashboardSocial.TopLocationsCheckedIn"]</div>
                    <abp-table border-style="Borderless" striped-rows="false" class="table-top-border-none">
                        <tbody>
                        @foreach (var item in Model.TopCheckinLocations)
                        {
                            <tr>
                                <td style="width: 30%">@item.Name</td>
                                <td style="width: 50%">
                                    <abp-progress-bar value="@item.Percent.ToDouble()" class="LookOn-progress-bar-color-0"/>
                                </td>
                                <td style="width: 20%">
                                    @item.Percent.ToPositivePercent()
                                </td>
                            </tr>
                        }
                        </tbody>
                    </abp-table>
                </abp-column>
            }
            // else if (Model.TopFollowerMetrics.IsNotNullOrEmpty() && Model.TopLikedPageMetrics.IsNotNullOrEmpty())
            else
            {
                <abp-column size-xl="_6" size-md="_12" class="mb-sm-2">
                    <div class="veek-support-current-font font-weight-600 margin-bottom-15">@L["Page3.DashboardSocial.TopLocationsCheckedIn"]</div>
                    <abp-table border-style="Borderless" striped-rows="false" class="table-top-border-none">
                        <tbody>
                        @await Html.PartialAsync("Shared/FeatureUpdatingPartial", new FeatureUpdatingModel() { HasContent = true }, ViewData)
                        </tbody>
                    </abp-table>
                </abp-column>
            }

            @if (Model.TopGroups.IsNotNullOrEmpty())
            {
                <abp-column size-xl="_6" size-md="_12" class="mb-sm-2">
                    <div class="veek-support-current-font font-weight-600 margin-bottom-15">@L["Page3.DashboardSocial.TopGroups"]</div>
                    <abp-table border-style="Borderless" class="table-top-border-none">
                        <tbody>
                        @foreach (var item in Model.TopGroups)
                        {
                            <tr>
                                <td style="width: 30%">@item.Name</td>
                                <td style="width: 50%">
                                    <abp-progress-bar value="@item.Percent.ToDouble()" class="LookOn-progress-bar-color-0"/>
                                </td>
                                <td style="width: 20%">
                                    @item.Percent.ToPositivePercent()
                                </td>
                            </tr>
                        }
                        </tbody>
                    </abp-table>
                </abp-column>
            }
            // else if (Model.TopFollowerMetrics.IsNotNullOrEmpty() && Model.TopLikedPageMetrics.IsNotNullOrEmpty() && Model.TopCheckinLocations.IsNotNullOrEmpty())
            else
            {
                <abp-column size-xl="_6" size-md="_12" class="mb-sm-2">
                    <div class="veek-support-current-font font-weight-600 margin-bottom-15">@L["Page3.DashboardSocial.TopGroups"]</div>
                    <abp-table border-style="Borderless" class="table-top-border-none">
                        <tbody>
                        @await Html.PartialAsync("Shared/FeatureUpdatingPartial", new FeatureUpdatingModel() { HasContent = true }, ViewData)
                        </tbody>
                    </abp-table>
                </abp-column>
            }

        </abp-row>
    </abp-card-body>
</abp-card>